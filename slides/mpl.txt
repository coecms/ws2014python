Introduction to matplotlib
==========================

**matplotlib** is a backend engine for plotting.

**pyplot** is the plotting interface to ``matplotlib``, designed to resemble
Matlab's plotting tools.

To get started:

.. code:: python

   import numpy as np
   import matplotlib.pyplot as plt


First plot
==========

Plot :math:`\sin x` from :math:`0` to :math:`3\pi`:

.. code:: python

   x = np.linspace(0., 3. * np.pi, 25)

   plt.plot(x, np.sin(x))
   plt.show()

In the python shell, use interactive mode:

.. code:: python

   plt.ion()   # Enable interactive mode
   plt.ioff()  # Disable interactive mode


Saving model output
===================

Save the plot object:

.. code:: python

   plt.savefig('myplot.pdf')

The file type is based on the extension (usually).

To remove space around the plot:

.. code:: python

   plt.savefig('myplot.pdf',
               bbox_inches='tight')


Multiple plots
==============

Consecutive plots are added to the figure:

.. code:: python

   x = np.linspace(0., 3.*np.pi, 50)
   phase = np.arange(0., 2.*np.pi, 2.*np.pi/3.)
   style = ['r--', 'bs', 'g^']

   for p, s in zip(phase, style):
       plt.plot(x, np.sin(x + p), s)


Basic Labeling
==============

Basic labeling and markup:

.. code:: python

   plt.title('Three-phase plots')
   plt.xlabel('x')
   plt.ylabel('y')
   plt.grid()
   plt.axis([xmin, xmax, ymin, ymax])


Exercise
========

1. Use ``cumsum()`` and ``random.randn()`` to create three random walk time
   series, and plot them on a single figure.

2. Load the sea surface temperature and plot the time series for the mean global
   sea surface (SST vs time).

   *Ignore area-weighted mean, just do spatial mean values*


Solution
========

1. .. code:: python

      x_walk = np.cumsum(np.random.randn(101, 3),
                         axis=1)
      plt.plot(x_walk)

2. .. code:: python

      sst_nc = nc.Dataset('sst.nc', 'r')
      t = sst_nc.variables['initial_time0_hours'][::2]
      sst = sst_nc.variables['SSTK_GDS0_SFC'][::2]

      sst_mean = np.mean(sst, axis=(1,2)) - 273.15)
      plt.plot((t - t[0]) / 24., sst_mean)


Plot objects
============

More advanced plotting requires objects:

.. code:: python

   fig = plt.figure()
   ax = fig.add_subplot(1, 1, 1)
   l_sin, = ax.plot(x, np.sin(x))
   l_cos, = ax.plot(x, np.cos(x))

   ax.set_xlabel('x data')
   ax.set_title('sin(x)')

   l_sin.remove()


Multiple figures
================

Multiple subplots can be added to each figure:

.. code:: python

   fig = plt.figure()
   ax1 = fig.add_subplot(3, 1, 1)
   ax2 = fig.add_subplot(3, 1, 2)
   ax3 = fig.add_subplot(3, 1, 3)

Or use the compact form:

.. code:: python

   fig, (ax1, ax2, ax3) = plt.subplots(3, 1)


Surface plots
=============

Let's plot this fancy function:

.. math:: z(x, y) = \left( x - \tfrac{1}{2} \right) e^{-(x^2 + y^2)}

.. code:: python

   x_ax = np.linspace(-2., 2., 101)
   y_ax = np.linspace(-2., 2., 101)
   x, y = np.meshgrid(x_ax, y_ax)

   z = (x - 0.5) * np.exp(-np.sqrt(x**2 + y**2))
   plt.contour(x, y, z, 25)


More surface plots
==================

Use ``countourf`` for pretty colors:

.. code:: python

   plt.contourf(x, y, z)

Pixel plots are also popular:

.. code:: python

   z_ext = (x_ax[0], x_ax[-1], y_ax[0], y_ax[-1])
   plt.imshow(z, origin='lower', extent=z_ext)

   plt.pcolormesh(x, y, z)   # Faster than pcolor


Image arrays
============

Images can be loaded and plotted just like numerical data:

.. code:: python

      from scipy.misc import imread

      img = imread('data.jpg')

      plt.imshow(img)

``img`` is a RGB-array of shape ``(N_y, N_x, 3)``


mplot3d
=======

Basic 3D plotting is available:

.. code:: python

   import matplotlib.pyplot as plt
   from mpl_toolkits.mplot3d import axes3d

   x, y, z = ...
   fig = plt.figure()
   ax = fig.gca(projection='3d')
   ax.plot_surface(x, y, z)


The matplotlib gallery
======================

What about histograms? Log-log plots? Adding images?

Go to the gallery!

http://matplotlib.org/1.3.1/gallery.html

Look for what you want in the gallery, then read the source code.
